<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Dr.Cruz</title>
    <link>http://localhost:4321/</link>
    <description>Recent content in Home on Dr.Cruz</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 25 Feb 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:4321/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Clusters</title>
      <link>http://localhost:4321/post/2025/02/25/clusters/</link>
      <pubDate>Tue, 25 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/post/2025/02/25/clusters/</guid>
      <description>&lt;h2 id=&#34;font-colorf81707codigo-okfont&#34;&gt;&lt;font color=&#34;#F81707&#34;&gt;Codigo OK&lt;/font&gt;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;suppressWarnings(suppressMessages(library(dplyr)))&#xD;&#xA;suppressWarnings(suppressMessages(library(factoextra)))&#xD;&#xA;suppressWarnings(suppressMessages(library(DT)))&#xD;&#xA;library(dplyr)&#xD;&#xA;library(factoextra)&#xD;&#xA;# library(DT)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;font-color3ded1arealizar-el-clustering-con-k-means-cargar-el-dataset-font&#34;&gt;&lt;font color=&#34;#3DED1A&#34;&gt;Realizar el clustering con k-means Cargar el dataset &lt;/font&gt;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;data &amp;lt;- read.csv(&amp;quot;USA_cars_datasets.csv&amp;quot;)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;font-color3ded1aseleccionar-variables-numéricas-para-el-clustering-font&#34;&gt;&lt;font color=&#34;#3DED1A&#34;&gt;Seleccionar variables numéricas para el clustering &lt;/font&gt;&lt;/h3&gt;&#xA;&lt;p&gt;las columnas relevantes son &amp;lsquo;price&amp;rsquo;, &amp;lsquo;mileage&amp;rsquo;, &amp;lsquo;year&amp;rsquo;, etc.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;data_num &amp;lt;- data[, c(&amp;quot;price&amp;quot;, &amp;quot;mileage&amp;quot;, &amp;quot;year&amp;quot;)] &#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;font-color3ded1aeliminar-filas-con-ceros-en-price-mileage-o-yearfont&#34;&gt;&lt;font color=&#34;#3DED1A&#34;&gt;Eliminar filas con ceros en Price, mileage o year&lt;/font&gt;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;datos_filtrados &amp;lt;- data_num  %&amp;gt;%&#xD;&#xA;  filter(price &amp;gt; 0, mileage &amp;gt; 0, year &amp;gt; 0,&#xD;&#xA;         price &amp;gt;= 2000, year &amp;gt;= 2015, price &amp;lt; 60000,&#xD;&#xA;         mileage &amp;lt; 150000)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;font-color3ded1anormalizar-las-variables-restar-la-media-y-dividir-por-la-desviación-estándarfont&#34;&gt;&lt;font color=&#34;#3DED1A&#34;&gt;Normalizar las variables (restar la media y dividir por la desviación estándar)&lt;/font&gt;&lt;/h3&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;data_scaled &amp;lt;- scale(datos_filtrados)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;font-color3ded1adeterminar-el-número-óptimo-de-clusters-con-el-método-del-codofont&#34;&gt;&lt;font color=&#34;#3DED1A&#34;&gt;Determinar el número óptimo de clusters con el método del codo&lt;/font&gt;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;fviz_nbclust(data_scaled, kmeans, method = &amp;quot;wss&amp;quot;) +&#xD;&#xA;  labs(title = &amp;quot;Método del Codo para Determinar k&amp;quot;)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;img src=&#34;http://localhost:4321/post/2025/02/25/clusters/index_files/figure-html/grafica-1.png&#34; width=&#34;672&#34; /&gt;&#xD;&#xA;&lt;h2 id=&#34;font-color3ded1asupongamos-que-elegimos-k--3-después-de-ver-la-gráfica-del-codofont&#34;&gt;&lt;font color=&#34;#3DED1A&#34;&gt;Supongamos que elegimos k = 3 después de ver la gráfica del codo&lt;/font&gt;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;set.seed(123)  # Para reproducibilidad&#xD;&#xA;km &amp;lt;- kmeans(data_scaled, centers = 3, nstart = 25)&#xD;&#xA;                    # nstart mejora la estabilidad&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;font-color3ded1avisualizar-los-clusters-con-factoextrafont&#34;&gt;&lt;font color=&#34;#3DED1A&#34;&gt;Visualizar los clusters con factoextra&lt;/font&gt;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;fviz_cluster(km, data = data_scaled, geom = &amp;quot;point&amp;quot;, &#xD;&#xA;             main = &amp;quot;Clusters de K-means con PCA&amp;quot;) +&#xD;&#xA;  theme_minimal()&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;img src=&#34;http://localhost:4321/post/2025/02/25/clusters/index_files/figure-html/clusters-1.png&#34; width=&#34;672&#34; /&gt;&#xD;&#xA;&lt;h2 id=&#34;font-color3ded1aestadisticas-por-clustefont&#34;&gt;&lt;font color=&#34;#3DED1A&#34;&gt;Estadisticas por Cluste&lt;/font&gt;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;datos_filtrados &amp;lt;- as.data.frame(datos_filtrados)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;datos_filtrados$Cluster &amp;lt;- km$cluster&#xD;&#xA;head(datos_filtrados)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code&gt;##   price mileage year Cluster&#xD;&#xA;## 1  5350   39590 2018       2&#xD;&#xA;## 2 27700    6654 2018       3&#xD;&#xA;## 3  5700   45561 2018       2&#xD;&#xA;## 4 13350   23525 2017       2&#xD;&#xA;## 5 14600    9371 2018       2&#xD;&#xA;## 6  5250   63418 2017       1&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;#datatable(datos_filtrados, rownames = FALSE, options = list( pageLength = 5  ))&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;análisis-de-los-clusters&#34;&gt;Análisis de los clusters&lt;/h2&gt;&#xA;&lt;h3 id=&#34;a-tamaño-de-los-clusters&#34;&gt;a) Tamaño de los clusters&lt;/h3&gt;&#xA;&lt;h2 id=&#34;calcular-la-media-de-price-mileage-y-year-para-cada-cluster&#34;&gt;Calcular la media de price, mileage y year para cada cluster&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cluster_profiles &amp;lt;- datos_filtrados %&amp;gt;%&#xD;&#xA;  group_by(Cluster) %&amp;gt;%&#xD;&#xA;  summarise(&#xD;&#xA;    median_price = median(price),&#xD;&#xA;    median_mileage = median(mileage),&#xD;&#xA;    median_year = median(year),&#xD;&#xA;    n = n() # Número de elementos en cada cluster&#xD;&#xA;  )&#xD;&#xA;head(cluster_profiles)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code&gt;## # A tibble: 3 × 5&#xD;&#xA;##   Cluster median_price median_mileage median_year     n&#xD;&#xA;##     &amp;lt;int&amp;gt;        &amp;lt;dbl&amp;gt;          &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;&#xD;&#xA;## 1       1        13995         69004         2016   473&#xD;&#xA;## 2       2        15000         31992         2019   881&#xD;&#xA;## 3       3        29200         19852.        2019   728&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;#datatable(cluster_profiles, rownames = FALSE)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;interpretación-de-los-cluster&#34;&gt;Interpretación de los cluster&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Cluster 1&lt;/strong&gt; (Económicos y Más Antiguos): Precio promedio más bajo (15500), kilometraje más alto (55000), año promedio más antiguo (2016). En centroides normalizados: precio muy por debajo de la media global, kilometraje muy por encima de la media global, año muy por debajo de la media global. Representa coches más económicos, con más uso y más antiguos (dentro del rango filtrado).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Videos </title>
      <link>http://localhost:4321/note/2025/02/23/videos/</link>
      <pubDate>Sun, 23 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/note/2025/02/23/videos/</guid>
      <description>&lt;h2 id=&#34;videos-youtube&#34;&gt;Videos youtube&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=dQw4w9WgXcQ&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/dQw4w9WgXcQ/0.jpg&#34; alt=&#34;Rick Astley - Never Gonna Give You Up&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=BEoGvTlJMyY&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/BEoGvTlJMyY/0.jpg&#34; alt=&#34;Sabrina concert&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=y38qQRg3UDI&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/y38qQRg3UDI/0.jpg&#34; alt=&#34;Dua Lipa concert&#34;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cluster1-PCA</title>
      <link>http://localhost:4321/post/2025/02/21/cluster1/</link>
      <pubDate>Fri, 21 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/post/2025/02/21/cluster1/</guid>
      <description>&lt;h2 id=&#34;cargar-las-librerías-necesarias&#34;&gt;Cargar las librerías necesarias&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;suppressWarnings(suppressMessages(library(dplyr)))&#xD;&#xA;suppressWarnings(suppressMessages(library(factoextra)))&#xD;&#xA;library(dplyr)&#xD;&#xA;library(ggplot2)&#xD;&#xA;library(scales)&#xD;&#xA;library(factoextra)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;cargar-el-archivo-csv&#34;&gt;Cargar el archivo CSV&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;data &amp;lt;- read.csv(&amp;quot;USA_cars_datasets.csv&amp;quot;)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;seleccionar-las-variables-numéricas-para-el-análisis-de-clúster&#34;&gt;Seleccionar las variables numéricas para el análisis de clúster&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;datos &amp;lt;- data %&amp;gt;% select(price, year, mileage)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;eliminar-filas-con-ceros-en-price-mileage-o-year&#34;&gt;Eliminar filas con ceros en Price, mileage o year&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;datos_filtrados &amp;lt;- datos %&amp;gt;%&#xD;&#xA;  filter(price &amp;gt; 0, mileage &amp;gt; 0, year &amp;gt; 0, price &amp;gt;= 2000, year &amp;gt;= 2015)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;verificar-cuántos-registros-se-eliminaron&#34;&gt;Verificar cuántos registros se eliminaron&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cat(&amp;quot;Registros originales:&amp;quot;, nrow(datos), &amp;quot;\n&amp;quot;)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code&gt;## Registros originales: 2499&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cat(&amp;quot;Registros después del filtrado:&amp;quot;, nrow(datos_filtrados), &amp;quot;\n&amp;quot;)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code&gt;## Registros después del filtrado: 2101&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;5-normalizar-las-variables&#34;&gt;5. Normalizar las variables&lt;/h2&gt;&#xA;&lt;h3 id=&#34;usamos-la-normalización-z-score-estandarización-para-que-las-variables&#34;&gt;Usamos la normalización Z-score (estandarización) para que las variables&lt;/h3&gt;&#xA;&lt;h3 id=&#34;tengan-media-0-y-desviación-estándar-1&#34;&gt;tengan media 0 y desviación estándar 1.&lt;/h3&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;datos_normalizados &amp;lt;- scale(datos_filtrados)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;convertir-a-dataframe-para-facilitar-el-manejo-posterior-opcional&#34;&gt;Convertir a dataframe para facilitar el manejo posterior (opcional)&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;datos_normalizados &amp;lt;- as.data.frame(datos_normalizados)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;6-realizar-el-análisis-de-cluster-k-means&#34;&gt;6. Realizar el análisis de cluster K-means&lt;/h2&gt;&#xA;&lt;h3 id=&#34;fijamos-una-semilla-para-la-reproducibilidad-de-los-resultados&#34;&gt;Fijamos una semilla para la reproducibilidad de los resultados&lt;/h3&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;set.seed(123)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;kmeans&#34;&gt;Kmeans&lt;/h2&gt;&#xA;&lt;h3 id=&#34;nstart--25-intenta-25-configuraciones-iniciales-aleatorias-y-elige-la-mejor&#34;&gt;nstart = 25 intenta 25 configuraciones iniciales aleatorias y elige la mejor.&lt;/h3&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;kmeans_result &amp;lt;- kmeans(datos_normalizados, centers = 3, nstart = 25)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;7-añadir-los-clusters-al-dataset-filtrado-original-para-análisis-posterior&#34;&gt;7. Añadir los clusters al dataset filtrado original (para análisis posterior)&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;datos_filtrados$cluster &amp;lt;- kmeans_result$cluster&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;8-visualizar-los-clusters-opcional-pero-muy-recomendable&#34;&gt;8. Visualizar los clusters (opcional pero muy recomendable)&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;  Usamos fviz_cluster de factoextra para una visualización rápida&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;fviz_cluster(kmeans_result, data = datos_normalizados,&#xD;&#xA;             geom = &amp;quot;point&amp;quot;,  ## Mostrar puntos&#xD;&#xA;             ellipse.type = &amp;quot;euclid&amp;quot;, ## Elipse de confianza&#xD;&#xA;             palette = &amp;quot;jco&amp;quot;, ## Paleta de colores&#xD;&#xA;             ggtheme = theme_minimal()) ## Tema minimalista&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;img src=&#34;http://localhost:4321/post/2025/02/21/cluster1/index_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;</description>
    </item>
    <item>
      <title>Cluster2-ggplot</title>
      <link>http://localhost:4321/post/2025/02/21/cluster2-ggplot/</link>
      <pubDate>Fri, 21 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/post/2025/02/21/cluster2-ggplot/</guid>
      <description>&lt;h2 id=&#34;cargar-las-librerías-necesarias&#34;&gt;Cargar las librerías necesarias&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;suppressWarnings(suppressMessages(library(dplyr)))&#xD;&#xA;suppressWarnings(suppressMessages(library(factoextra)))&#xD;&#xA;library(dplyr)&#xD;&#xA;library(ggplot2)&#xD;&#xA;library(scales)&#xD;&#xA;library(factoextra)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;cargar-el-archivo-csv&#34;&gt;Cargar el archivo CSV&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;data &amp;lt;- read.csv(&amp;quot;USA_cars_datasets.csv&amp;quot;)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;seleccionar-las-variables-numéricas-para-el-análisis-de-clúster&#34;&gt;Seleccionar las variables numéricas para el análisis de clúster&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;datos &amp;lt;- data %&amp;gt;% select(price, year, mileage)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;eliminar-filas-con-ceros-en-price-mileage-o-year&#34;&gt;Eliminar filas con ceros en Price, mileage o year&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;datos_filtrados &amp;lt;- datos %&amp;gt;%&#xD;&#xA;  filter(price &amp;gt; 0, mileage &amp;gt; 0, year &amp;gt; 0, price &amp;gt;= 2000, year &amp;gt;= 2015)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;5-normalizar-las-variables&#34;&gt;5. Normalizar las variables&lt;/h2&gt;&#xA;&lt;h3 id=&#34;usamos-la-normalización-z-score-estandarización-para-que-las-variables&#34;&gt;Usamos la normalización Z-score (estandarización) para que las variables&lt;/h3&gt;&#xA;&lt;h3 id=&#34;tengan-media-0-y-desviación-estándar-1&#34;&gt;tengan media 0 y desviación estándar 1.&lt;/h3&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;datos_normalizados &amp;lt;- scale(datos_filtrados) %&amp;gt;% as.data.frame()&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;6-determinar-el-número-óptimo-de-clústeres&#34;&gt;6. Determinar el número óptimo de clústeres&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;set.seed(123)&#xD;&#xA;wcss &amp;lt;- numeric(10)&#xD;&#xA;for (k in 1:10) {&#xD;&#xA;  kmeans_model &amp;lt;- kmeans(datos_normalizados, centers = k, nstart = 10)&#xD;&#xA;  wcss[k] &amp;lt;- kmeans_model$tot.withinss&#xD;&#xA;}&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;70gráfico-del-codo&#34;&gt;7.0Gráfico del codo&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data.frame(K = 1:10, WCSS = wcss), aes(K, WCSS)) +&#xD;&#xA;  geom_line(color = &amp;quot;steelblue&amp;quot;) +&#xD;&#xA;  geom_point(size = 3) +&#xD;&#xA;  labs(title = &amp;quot;Método del Codo&amp;quot;, x = &amp;quot;Número de clústeres (K)&amp;quot;, y = &amp;quot;WCSS&amp;quot;) +&#xD;&#xA;  theme_minimal()&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;img src=&#34;http://localhost:4321/post/2025/02/21/cluster2-ggplot/index_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&#xD;&#xA;&lt;h2 id=&#34;8-aplicar-k-means-k3&#34;&gt;8. Aplicar K-Means (K=3)&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;set.seed(42)&#xD;&#xA;kmeans_model &amp;lt;- kmeans(datos_normalizados, centers = 3, nstart = 20)&#xD;&#xA;datos_filtrados$Cluster &amp;lt;- as.factor(kmeans_model$cluster)&#xD;&#xA;head(datos_filtrados)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code&gt;##   price year mileage Cluster&#xD;&#xA;## 1  5350 2018   39590       3&#xD;&#xA;## 2 27700 2018    6654       1&#xD;&#xA;## 3  5700 2018   45561       3&#xD;&#xA;## 4 13350 2017   23525       3&#xD;&#xA;## 5 14600 2018    9371       3&#xD;&#xA;## 6  5250 2017   63418       2&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;estadisticas-por-cluster&#34;&gt;Estadisticas por Cluster&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cluster_stats &amp;lt;- datos_filtrados %&amp;gt;%&#xD;&#xA;  group_by(Cluster) %&amp;gt;%&#xD;&#xA;  summarise(&#xD;&#xA;    median_Price = median(price),&#xD;&#xA;    median_Mileage = median(mileage),&#xD;&#xA;    median_Year = median(year),&#xD;&#xA;    Count = n()&#xD;&#xA;  )&#xD;&#xA;&#xD;&#xA;print(cluster_stats)  # MUY IMPORTANTE RESUMEN POR cLUSTER&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code&gt;## # A tibble: 3 × 5&#xD;&#xA;##   Cluster median_Price median_Mileage median_Year Count&#xD;&#xA;##   &amp;lt;fct&amp;gt;          &amp;lt;dbl&amp;gt;          &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;&#xD;&#xA;## 1 1              32200         20034         2019   541&#xD;&#xA;## 2 2              13871         68060.        2016   488&#xD;&#xA;## 3 3              16100         30350         2019  1072&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Cluster3</title>
      <link>http://localhost:4321/note/2025/02/21/cluster3/</link>
      <pubDate>Fri, 21 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/note/2025/02/21/cluster3/</guid>
      <description>&lt;p&gt;código completo en R para realizar un análisis&#xA;de cluster por k-means en el dataset &amp;ldquo;usa-cars&amp;rdquo;,&#xA;incluyendo la normalización de las variables.&#xA;Este código asume que el dataset tiene columnas&#xA;numéricas como price, mileage y year, que son&#xA;típicas en datasets de automóviles&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-cargar-el-dataset&#34;&gt;1. Cargar el dataset&lt;/h2&gt;&#xA;&lt;h2 id=&#34;reemplaza-rutaalarchivousa-carscsv-con-la-ruta-real-de-tu-archivo&#34;&gt;Reemplaza &amp;ldquo;ruta/al/archivo/usa-cars.csv&amp;rdquo; con la ruta real de tu archivo&lt;/h2&gt;&#xA;&lt;p&gt;datos &amp;lt;- read.csv(&amp;ldquo;ruta/al/archivo/usa-cars.csv&amp;rdquo;)&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-seleccionar-las-variables-numéricas-para-el-clustering&#34;&gt;2. Seleccionar las variables numéricas para el clustering&lt;/h2&gt;&#xA;&lt;h2 id=&#34;aquí-seleccionamos-price-mileage-y-year-modifica-según-tu-dataset&#34;&gt;Aquí seleccionamos &amp;lsquo;price&amp;rsquo;, &amp;lsquo;mileage&amp;rsquo; y &amp;lsquo;year&amp;rsquo;; modifica según tu dataset&lt;/h2&gt;&#xA;&lt;p&gt;variables_cluster &amp;lt;- datos[, c(&amp;ldquo;price&amp;rdquo;, &amp;ldquo;mileage&amp;rdquo;, &amp;ldquo;year&amp;rdquo;)]&lt;/p&gt;</description>
    </item>
    <item>
      <title>cluster4</title>
      <link>http://localhost:4321/post/2025/02/21/cluster4/</link>
      <pubDate>Fri, 21 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/post/2025/02/21/cluster4/</guid>
      <description>&lt;p&gt;código completo en R para realizar un análisis&#xA;de cluster por k-means en el dataset &amp;ldquo;usa-cars&amp;rdquo;,&#xA;incluyendo la normalización de las variables.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-cargar-el-dataset&#34;&gt;1. Cargar el dataset&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;datos &amp;lt;- read.csv(&amp;quot;USA_cars_datasets.csv&amp;quot;)&#xD;&#xA;&#xD;&#xA;# 2. Seleccionar las variables numéricas para el clustering&#xD;&#xA;# Aquí seleccionamos &#39;price&#39;, &#39;mileage&#39; y &#39;year&#39;; modifica según tu dataset&#xD;&#xA;variables_cluster &amp;lt;- datos[, c(&amp;quot;price&amp;quot;, &amp;quot;mileage&amp;quot;, &amp;quot;year&amp;quot;)]&#xD;&#xA;&#xD;&#xA;# 3. Normalizar las variables&#xD;&#xA;# Usamos scale() para estandarizar las variables (media 0, desviación estándar 1)&#xD;&#xA;variables_normalizadas &amp;lt;- scale(variables_cluster)&#xD;&#xA;&#xD;&#xA;# 4. Método del codo para determinar el número óptimo de clusters&#xD;&#xA;set.seed(123)  # Para reproducibilidad&#xD;&#xA;wcss &amp;lt;- vector()  # Vector para almacenar la suma de cuadrados dentro de los clusters&#xD;&#xA;for (i in 1:10) {&#xD;&#xA;  kmeans_model &amp;lt;- kmeans(variables_normalizadas, centers = i, nstart = 10)&#xD;&#xA;  wcss[i] &amp;lt;- kmeans_model$tot.withinss&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;# Graficar el método del codo&#xD;&#xA;plot(1:10, wcss, type = &amp;quot;b&amp;quot;, pch = 19, frame = FALSE, &#xD;&#xA;     xlab = &amp;quot;Número de clusters&amp;quot;, ylab = &amp;quot;WCSS (Within-Cluster Sum of Squares)&amp;quot;)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;img src=&#34;http://localhost:4321/post/2025/02/21/cluster4/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&#xD;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# 5. Aplicar k-means (suponiendo que 3 clusters es el número óptimo)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;set.seed(123)  # Para reproducibilidad&#xD;&#xA;kmeans_result &amp;lt;- kmeans(variables_normalizadas, centers = 3, nstart = 25)&#xD;&#xA;&#xD;&#xA;# 6. Visualizar los clusters usando PCA&#xD;&#xA;# Realizamos un análisis de componentes principales (PCA) para graficar&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pca_result &amp;lt;- prcomp(variables_normalizadas, scale. = FALSE)&#xD;&#xA;plot(pca_result$x[,1], pca_result$x[,2], col = kmeans_result$cluster, &#xD;&#xA;     pch = 19, xlab = &amp;quot;Componente Principal 1&amp;quot;, ylab = &amp;quot;Componente Principal 2&amp;quot;)&#xD;&#xA;&#xD;&#xA;points(kmeans_result$centers %*% pca_result$rotation[,1:2], col = 1:3, pch = 3, cex = 2)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;img src=&#34;http://localhost:4321/post/2025/02/21/cluster4/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&#xD;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# 7. Mostrar los centroides de los clusters&#xD;&#xA;print(kmeans_result$centers)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code&gt;##        price     mileage       year&#xD;&#xA;## 1  1.0622743 -0.43312448  0.4299743&#xD;&#xA;## 2 -0.4544278 -0.09571377  0.1457798&#xD;&#xA;## 3 -1.1525411  1.79747607 -2.0242227&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# 8. Agregar la asignación de clusters al dataset original&#xD;&#xA;datos$cluster &amp;lt;- kmeans_result$cluster&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;cargar-las-librerías-necesarias&#34;&gt;Cargar las librerías necesarias&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggplot2)    # Para visualización personalizada&#xD;&#xA;library(factoextra) # Para visualización de clusters y método del codo&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code&gt;## Warning: package &#39;factoextra&#39; was built under R version 4.4.2&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code&gt;## Welcome! Want to learn more? See two factoextra-related books at https://goo.gl/ve3WBa&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# 1. Cargar el dataset&#xD;&#xA;data &amp;lt;- read.csv(&amp;quot;USA_cars_datasets.csv&amp;quot;)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# 2. Seleccionar variables numéricas para el clustering&#xD;&#xA;# Supongamos que las columnas relevantes son &#39;price&#39;, &#39;mileage&#39;, &#39;year&#39;, etc.&#xD;&#xA;# Ajusta los números de columnas según el dataset real (por ejemplo, 2:5).&#xD;&#xA;data_num &amp;lt;- data[, c(&amp;quot;price&amp;quot;, &amp;quot;mileage&amp;quot;, &amp;quot;year&amp;quot;)]  # Ejemplo, ajusta según tu dataset&#xD;&#xA;# Si no sabes qué columnas usar, inspecciona el dataset con str(data)&#xD;&#xA;&#xD;&#xA;# 3. Normalizar las variables (restar la media y dividir por la desviación estándar)&#xD;&#xA;data_scaled &amp;lt;- scale(data_num)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# 4. Determinar el número óptimo de clusters con el método del codo&#xD;&#xA;fviz_nbclust(data_scaled, kmeans, method = &amp;quot;wss&amp;quot;) +&#xD;&#xA;  labs(title = &amp;quot;Método del Codo para Determinar k&amp;quot;)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;img src=&#34;http://localhost:4321/post/2025/02/21/cluster4/index_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&#xD;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# 5. Realizar el clustering con k-means&#xD;&#xA;# Supongamos que elegimos k = 3 después de ver la gráfica del codo&#xD;&#xA;set.seed(123)  # Para reproducibilidad&#xD;&#xA;km &amp;lt;- kmeans(data_scaled, centers = 3, nstart = 25)  # nstart mejora la estabilidad&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# 6. Visualizar los clusters con factoextra&#xD;&#xA;fviz_cluster(km, data = data_scaled, geom = &amp;quot;point&amp;quot;, &#xD;&#xA;             main = &amp;quot;Clusters de K-means con PCA&amp;quot;) +&#xD;&#xA;  theme_minimal()&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;img src=&#34;http://localhost:4321/post/2025/02/21/cluster4/index_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&#xD;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# 7. Añadir los clusters al dataset original para visualización personalizada&#xD;&#xA;data$cluster &amp;lt;- as.factor(km$cluster)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# 8. Visualizar con ggplot2 (ejemplo: price vs mileage)&#xD;&#xA;ggplot(data, aes(x = price, y = mileage, color = cluster)) +&#xD;&#xA;  geom_point(size = 2) +  # Tamaño de los puntos&#xD;&#xA;  theme_minimal() +&#xD;&#xA;  labs(title = &amp;quot;Clusters de K-means&amp;quot;, &#xD;&#xA;       x = &amp;quot;Precio&amp;quot;, &#xD;&#xA;       y = &amp;quot;Kilometraje&amp;quot;, &#xD;&#xA;       color = &amp;quot;Cluster&amp;quot;) +&#xD;&#xA;  scale_color_brewer(palette = &amp;quot;Set1&amp;quot;)  # Colores diferenciados&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;img src=&#34;http://localhost:4321/post/2025/02/21/cluster4/index_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;</description>
    </item>
    <item>
      <title>ClusterBoxplot</title>
      <link>http://localhost:4321/post/2025/02/21/clusterboxplot/</link>
      <pubDate>Fri, 21 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/post/2025/02/21/clusterboxplot/</guid>
      <description>&lt;h2 id=&#34;boxplox-from-clusters&#34;&gt;Boxplox from Clusters&lt;/h2&gt;&#xA;&lt;h2 id=&#34;cargar-las-librerías-necesarias&#34;&gt;Cargar las librerías necesarias&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;suppressWarnings(suppressMessages(library(reshape2)))&#xD;&#xA;suppressWarnings(suppressMessages(library(dplyr)))&#xD;&#xA;suppressWarnings(suppressMessages(library(factoextra)))&#xD;&#xA;library(dplyr)&#xD;&#xA;library(ggplot2)&#xD;&#xA;library(reshape2)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;datos &amp;lt;- read.csv(&amp;quot;USA_cars_datasets.csv&amp;quot;)&#xD;&#xA;#attach(datos)&#xD;&#xA;# str(data)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;variables_cluster &amp;lt;- datos[, c(&amp;quot;price&amp;quot;, &amp;quot;mileage&amp;quot;, &amp;quot;year&amp;quot;)]&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;eliminar-filas-con-ceros-en-price-mileage-o-year&#34;&gt;Eliminar filas con ceros en Price, mileage o year&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;datos_filtrados &amp;lt;- variables_cluster %&amp;gt;%&#xD;&#xA;  filter(price &amp;gt; 0, mileage &amp;gt; 0, year &amp;gt; 0, price &amp;gt;= 2000, year &amp;gt;= 2015, price &amp;lt; 60000, mileage &amp;lt; 150000)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;datos_normalizados &amp;lt;- scale(datos_filtrados)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;convertir-a-dataframe&#34;&gt;Convertir a dataframe&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;datos_normalizados &amp;lt;- as.data.frame(datos_normalizados)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;6-realizar-el-análisis-de-cluster-k-means&#34;&gt;6. Realizar el análisis de cluster K-means&lt;/h2&gt;&#xA;&lt;h4 id=&#34;fijamos-una-semilla-para-la-reproducibilidad-de-los-resultados&#34;&gt;Fijamos una semilla para la reproducibilidad de los resultados&lt;/h4&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;set.seed(123)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;kmeans&#34;&gt;Kmeans&lt;/h2&gt;&#xA;&lt;h4 id=&#34;nstart--25-intenta-25-configuraciones-iniciales-aleatorias-y-elige-la-mejor&#34;&gt;nstart = 25 intenta 25 configuraciones iniciales aleatorias y elige la mejor.&lt;/h4&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;kmeans_result &amp;lt;- kmeans(datos_normalizados, centers = 3, nstart = 25)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;7-añadir-los-clusters-al-dataset-filtrado-original&#34;&gt;7. Añadir los clusters al dataset filtrado original&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;datos_filtrados$cluster &amp;lt;- kmeans_result$cluster&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;distribución-de-precio-por-cluster&#34;&gt;Distribución de Precio por Cluster&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(datos_filtrados) + aes(x = cluster, y = price, fill = factor(cluster)) + geom_boxplot() + theme_minimal() +&#xD;&#xA;  labs(title = &amp;quot;Distribución de Precio por Cluster&amp;quot;, &#xD;&#xA;       x = &amp;quot;Cluster&amp;quot;, &#xD;&#xA;       y = &amp;quot;Precio&amp;quot;) + theme(legend.position = &amp;quot;none&amp;quot;)  # Opcional: quitar la leyenda&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;img src=&#34;http://localhost:4321/post/2025/02/21/clusterboxplot/index_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&#xD;&#xA;&lt;h2 id=&#34;distribución-del-kilometraje-por-cluster&#34;&gt;Distribución del Kilometraje por Cluster&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# 2. Boxplot para &#39;mileage&#39; vs clusters&#xD;&#xA;ggplot(datos_filtrados, aes(x = cluster, y = mileage, fill = factor(cluster))) +&#xD;&#xA;  geom_boxplot() +&#xD;&#xA;  theme_minimal() +&#xD;&#xA;  labs(title = &amp;quot;Distribución de Kilometraje por Cluster&amp;quot;, &#xD;&#xA;       x = &amp;quot;Cluster&amp;quot;, &#xD;&#xA;       y = &amp;quot;Kilometraje&amp;quot;) +&#xD;&#xA;  scale_fill_brewer(palette = &amp;quot;Set1&amp;quot;) +&#xD;&#xA;  theme(legend.position = &amp;quot;none&amp;quot;)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;img src=&#34;http://localhost:4321/post/2025/02/21/clusterboxplot/index_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;&#xD;&#xA;&lt;h2 id=&#34;distribución-por-año-por-cluster&#34;&gt;Distribución por Año por Cluster&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# 3. Boxplot para &#39;year&#39; vs clusters&#xD;&#xA;ggplot(datos_filtrados, aes(x = cluster, y = year, fill = factor(cluster))) +&#xD;&#xA;  geom_boxplot() +&#xD;&#xA;  theme_minimal() +&#xD;&#xA;  labs(title = &amp;quot;Distribución de Año por Cluster&amp;quot;, &#xD;&#xA;       x = &amp;quot;Cluster&amp;quot;, &#xD;&#xA;       y = &amp;quot;Año&amp;quot;) +&#xD;&#xA;  scale_fill_brewer(palette = &amp;quot;Set1&amp;quot;) +&#xD;&#xA;  theme(legend.position = &amp;quot;none&amp;quot;)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;img src=&#34;http://localhost:4321/post/2025/02/21/clusterboxplot/index_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;672&#34; /&gt;&#xD;&#xA;&lt;h1 id=&#34;combinar-todos-en-una-sola-figura-con-facet_wrap&#34;&gt;Combinar todos en una sola figura con facet_wrap&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;data_long &amp;lt;- melt(datos_filtrados, id.vars = &amp;quot;cluster&amp;quot;, measure.vars = c(&amp;quot;price&amp;quot;,&amp;quot;mileage&amp;quot;, &amp;quot;year&amp;quot;))&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data_long, aes(x = cluster, y = value, fill = factor(cluster))) +&#xD;&#xA;  geom_boxplot() +&#xD;&#xA;  facet_wrap(~variable, scales = &amp;quot;free_y&amp;quot;) +  # Escalas libres para cada variable&#xD;&#xA;  theme_minimal() +&#xD;&#xA;  labs(title = &amp;quot;Distribución de Variables por Cluster&amp;quot;, &#xD;&#xA;       x = &amp;quot;Cluster&amp;quot;, &#xD;&#xA;       y = &amp;quot;Valor&amp;quot;) +&#xD;&#xA;  scale_fill_brewer(palette = &amp;quot;Set1&amp;quot;) +&#xD;&#xA;  theme(legend.position = &amp;quot;none&amp;quot;)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;img src=&#34;http://localhost:4321/post/2025/02/21/clusterboxplot/index_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;672&#34; /&gt;&#xD;&#xA;&lt;h2 id=&#34;análisis-por-variable-y-cluster&#34;&gt;&lt;strong&gt;Análisis por Variable y Cluster&lt;/strong&gt;:&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Panel de &lt;code&gt;price&lt;/code&gt;&lt;/strong&gt;: Observa cuál cluster tiene la mediana más baja y menor dispersión (caja más pequeña). Un cluster con precios bajos y consistentes podría indicar autos más económicos.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Panel de &lt;code&gt;mileage&lt;/code&gt;&lt;/strong&gt;: Busca el cluster con la mediana más baja en kilometraje y pocos valores atípicos altos. Esto sugiere autos con poco uso.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Panel de &lt;code&gt;year&lt;/code&gt;&lt;/strong&gt;: Identifica el cluster con la mediana más alta (años más recientes) y una caja que no baje demasiado (evitar modelos muy antiguos).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;Selección del &amp;ldquo;Mejor&amp;rdquo; Cluster&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hello R Markdown</title>
      <link>http://localhost:4321/post/2020/12/01/hello-r-markdown/</link>
      <pubDate>Tue, 01 Dec 2020 21:13:14 -0500</pubDate>
      <guid>http://localhost:4321/post/2020/12/01/hello-r-markdown/</guid>
      <description>&lt;h1 id=&#34;r-markdown&#34;&gt;R Markdown&lt;/h1&gt;&#xA;&lt;p&gt;This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see &lt;a href=&#34;http://rmarkdown.rstudio.com&#34;&gt;http://rmarkdown.rstudio.com&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;You can embed an R code chunk like this:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(cars)&#xD;&#xA;##      speed           dist       &#xD;&#xA;##  Min.   : 4.0   Min.   :  2.00  &#xD;&#xA;##  1st Qu.:12.0   1st Qu.: 26.00  &#xD;&#xA;##  Median :15.0   Median : 36.00  &#xD;&#xA;##  Mean   :15.4   Mean   : 42.98  &#xD;&#xA;##  3rd Qu.:19.0   3rd Qu.: 56.00  &#xD;&#xA;##  Max.   :25.0   Max.   :120.00&#xD;&#xA;fit &amp;lt;- lm(dist ~ speed, data = cars)&#xD;&#xA;fit&#xD;&#xA;## &#xD;&#xA;## Call:&#xD;&#xA;## lm(formula = dist ~ speed, data = cars)&#xD;&#xA;## &#xD;&#xA;## Coefficients:&#xD;&#xA;## (Intercept)        speed  &#xD;&#xA;##     -17.579        3.932&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;including-plots&#34;&gt;Including Plots&lt;/h1&gt;&#xA;&lt;p&gt;You can also embed plots. See Figure &lt;a href=&#34;#fig:pie&#34;&gt;1&lt;/a&gt; for example:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Another Note on A blogdown Tutorial</title>
      <link>http://localhost:4321/note/2017/06/14/another-note/</link>
      <pubDate>Wed, 14 Jun 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/note/2017/06/14/another-note/</guid>
      <description>&lt;p&gt;I just discovered &lt;a href=&#34;https://www.apreshill.com/blog/2020-12-new-year-new-blogdown/&#34;&gt;an awesome tutorial&lt;/a&gt; on &lt;strong&gt;blogdown&lt;/strong&gt; written by Alison. I have to admit this is &lt;em&gt;the&lt;/em&gt; best &lt;strong&gt;blogdown&lt;/strong&gt; tutorial I have seen so far.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://www.apreshill.com/blog/2020-12-new-year-new-blogdown/03-blogdown-2021.png&#34; alt=&#34;Alison&amp;rsquo;s blogdown tutorial&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Quick Note on Two Beautiful Websites</title>
      <link>http://localhost:4321/note/2017/06/13/a-quick-note/</link>
      <pubDate>Tue, 13 Jun 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/note/2017/06/13/a-quick-note/</guid>
      <description>&lt;p&gt;To me, the two most impressive websites based on &lt;strong&gt;blogdown&lt;/strong&gt; are:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://robjhyndman.com&#34;&gt;Rob J Hyndman&lt;/a&gt;&amp;rsquo;s personal website.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://livefreeordichotomize.com&#34;&gt;Live Free or Dichotomize&lt;/a&gt; by Lucy and Nick &lt;em&gt;et al&lt;/em&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;I&amp;rsquo;m sure there will be more.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Markdown Post</title>
      <link>http://localhost:4321/post/2016/02/14/markdown-post/</link>
      <pubDate>Sun, 14 Feb 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/post/2016/02/14/markdown-post/</guid>
      <description>&lt;p&gt;This sample post is mainly for&#xA;&lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;&lt;strong&gt;blogdown&lt;/strong&gt;&lt;/a&gt; users. If you do not use&#xA;&lt;strong&gt;blogdown&lt;/strong&gt;, you can skip the first section.&lt;/p&gt;&#xA;&lt;h1 id=&#34;1-markdown-or-r-markdown&#34;&gt;1. Markdown or R Markdown&lt;/h1&gt;&#xA;&lt;p&gt;This is a post written in plain Markdown (&lt;code&gt;*.md&lt;/code&gt;) instead of R Markdown&#xA;(&lt;code&gt;*.Rmd&lt;/code&gt;). The major differences are:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;You cannot run any R code in a plain Markdown document, whereas in an R&#xA;Markdown document, you can embed R code chunks (&lt;code&gt;```{r}&lt;/code&gt;);&lt;/li&gt;&#xA;&lt;li&gt;A plain Markdown post is rendered through&#xA;&lt;a href=&#34;https://gohugo.io/overview/configuration/&#34;&gt;Goldmark&lt;/a&gt; by default, and an R&#xA;Markdown document is compiled by&#xA;&lt;a href=&#34;http://rmarkdown.rstudio.com&#34;&gt;&lt;strong&gt;rmarkdown&lt;/strong&gt;&lt;/a&gt; and&#xA;&lt;a href=&#34;http://pandoc.org&#34;&gt;Pandoc&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;When creating a new post, you have to decide whether the post format is Markdown&#xA;or R Markdown, and this can be done via the &lt;code&gt;rmd&lt;/code&gt; argument of the function&#xA;&lt;code&gt;blogdown::new_post()&lt;/code&gt;, e.g.&lt;/p&gt;</description>
    </item>
    <item>
      <title>About Hugo XMin</title>
      <link>http://localhost:4321/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/about/</guid>
      <description>&lt;p&gt;I was writing the&#xA;&lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;&lt;strong&gt;blogdown&lt;/strong&gt;&lt;/a&gt; book.&lt;/p&gt;&#xA;&lt;h2 id=&#34;hugoyaml-the-config-file&#34;&gt;&lt;code&gt;hugo.yaml&lt;/code&gt; (the config file)&lt;/h2&gt;&#xA;&lt;p&gt;For this example site, I defined permalinks for two sections, &lt;code&gt;post&lt;/code&gt; and &lt;code&gt;note&lt;/code&gt;, so that the links to pages under these directories will contain the date info, e.g., &lt;code&gt;https://xmin.yihui.org/post/2016/02/14/a-plain-markdown-post/&lt;/code&gt;. This is optional, and it is up to your personal taste of URLs.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;permalinks:&#xD;&#xA;  note: &amp;quot;/note/:year/:month/:day/:slug/&amp;quot;&#xD;&#xA;  post: &amp;quot;/post/:year/:month/:day/:slug/&amp;quot;&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;You can define the menu through &lt;code&gt;menu.main&lt;/code&gt;, e.g.,&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;menu:&#xD;&#xA;  main:&#xD;&#xA;    - name: Home&#xD;&#xA;      url: &amp;quot;&amp;quot;&#xD;&#xA;      weight: 1&#xD;&#xA;    - name: About&#xD;&#xA;      url: &amp;quot;about/&amp;quot;&#xD;&#xA;      weight: 2&#xD;&#xA;    - name: Categories&#xD;&#xA;      url: &amp;quot;categories/&amp;quot;&#xD;&#xA;      weight: 3&#xD;&#xA;    - name: Tags&#xD;&#xA;      url: &amp;quot;tags/&amp;quot;&#xD;&#xA;      weight: 4&#xD;&#xA;    - name: Subscribe&#xD;&#xA;      url: &amp;quot;index.xml&amp;quot;&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Alternatively, you can add &lt;code&gt;menu: main&lt;/code&gt; to the YAML metadata of any of your pages, so that these pages will appear in the menu.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
